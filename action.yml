name: 'Go Builder'
description: 'Builds golang projects with lots of options'
inputs:
  target:
    description: 'Path to build'
    required: false
    default: './...'
  version:
    description: 'Version number'
    required: false
    default: '0.0.0'
  location:
    description: 'Version variable location path'
    required: false
    default: ''
  date:
    description: 'Date created'
    required: false
    default: ''
  ld-library-path:
    description: 'shared library search path'
    required: false
    default: ''
  cgo-ldflags:
    description: 'Additional LDFLAGS passed to the C/C++ compiler by cgo'
    required: false
    default: ''
  cgo-cppflags:
    description: 'Additional CPPFLAGS passed to the C++ compiler by cgo'
    required: false
    default: ''
  extldflags:
    description: 'Parameter passed to the -extldflags options of ldflags'
    required: false
    default: '-static'
    
runs:
  using: "composite"
  steps: 
    - id: go-build
      run: |
        if [[ -n "${{ inputs.ld-library-path }}" ]]; then
          export LD_LIBRARY_PATH="${{ inputs.ld-library-path }}"
        fi
        if [[ -n "${{ inputs.cgo-ldflags }}" ]]; then
          export CGO_LDFLAGS="${{ inputs.cgo-ldflags }}"
        fi
        if [[ -n "${{ inputs.cgo-cppflags }}" ]]; then
          export CGO_CPPFLAGS="${{ inputs.cgo-cppflags }}"
        fi

        ldflags="-s -w -extldflags '${{ inputs.extldflags }}'"
        if [[ -n "${{ inputs.location }}" ]]; then
          ldflags="-X ${{ inputs.location }}.commit=${{ github.sha }} $ldflags"
          ldflags="-X ${{ inputs.location }}.version=${{ inputs.version }} $ldflags"
          ldflags="-X ${{ inputs.location }}.date=${{ inputs.date }} $ldflags"
        fi

        echo "-----------------------------------------"
        echo "Executing:"
        echo "-----------------------------------------"
        echo go build -a -trimpath -ldflags \"$ldflags\" ${{ inputs.target }}
        echo "-----------------------------------------"

        go build -a -trimpath -ldflags "$ldflags" ${{ inputs.target }}
      shell: bash
